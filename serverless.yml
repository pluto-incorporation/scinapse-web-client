service: pluto-web-client

provider:
  name: aws
  runtime: nodejs6.10
  stage: stage
  region: us-east-1

package:
  individually: true

plugins:
  - serverless-lambda-version

functions:
  edgeFunction:
    package:
      include:
        - "lambdaEdge${opt:stage}"
    handler: "lambdaEdge${opt:stage}.handler"
  render:
    handler: bundle.ssr
    package:
      artifact: dist.zip
    events:
      - http:
          method: get
          path: ${self:service}
      - http:
          method: any
          path: "${self:service}/{proxy+}"

resources:
  Resources:
    RenderLogGroup:
      Properties:
        RetentionInDays: "30"

    CloudFrontDistribution:
      Type: AWS::CloudFront::Distribution
      Properties:
        DistributionConfig:
          ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:966390130392:certificate/db902af7-a1ee-40ab-8145-9bd8b786ba39
            SslSupportMethod: sni-only
          DefaultRootObject: ''
          HttpVersion: 'http2'
          Enabled: true
          CustomErrorResponses:
            - ErrorCode: 400
              ErrorCachingMinTTL: 0
            - ErrorCode: 403
              ErrorCachingMinTTL: 0
            - ErrorCode: 404
              ErrorCachingMinTTL: 0
            - ErrorCode: 500
              ErrorCachingMinTTL: 0
            - ErrorCode: 502
              ErrorCachingMinTTL: 0
            - ErrorCode: 503
              ErrorCachingMinTTL: 0
            - ErrorCode: 504
              ErrorCachingMinTTL: 0
          DefaultCacheBehavior:
            DefaultTTL: 300
            MaxTTL: 300
            MinTTL: 300
            Compress: true
            AllowedMethods:
              - GET
              - HEAD
            CachedMethods:
              - HEAD
              - GET
            ForwardedValues:
              QueryString: true
              Headers:
                - User-Agent
                - X-Forwarded-For
            TargetOriginId: "${self:service}-${opt:stage}-api-gateway"
            ViewerProtocolPolicy: redirect-to-https
          Aliases:
            - ${file(./env/${opt:stage}.yml):DNS_ALIAS1}
            - ${file(./env/${opt:stage}.yml):DNS_ALIAS2}
            - ${file(./env/${opt:stage}.yml):DNS_ALIAS3}
          Origins:
          - CustomOriginConfig:
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
            DomainName:
              "Fn::Join": ["", [{"Ref": "ApiGatewayRestApi"}, ".execute-api.${self:provider.region}.amazonaws.com"]]
            Id: "${self:service}-${opt:stage}-api-gateway"
            OriginPath: /${opt:stage}/${self:service}
